/*{create:2011年7月28日18时44分03秒}{last modify:2011年7月28日18时44分07秒}
**stack.h头文件用于声明操作堆栈时相关的函数。这里只是声明了原型，相当于java中的接口
并没有具体的实现代码。由于堆栈的具体实现多种多样可以采于静态数组实现，可以采用
动态数组实现，也可采用链表来实现。所以这里只声明不实现，而所有的实现只需include 该
头文件即可，当然用到堆栈的主调函数也应include 该头文件
*/

/**
*STACK_TYPE 用来定义堆栈处理的元素类型，这里定义int,若需处理其它类型，把int更改为其
它类型即可，无须修改其它函数。
*/
#define STACK_TYPE int 
#define failure 0
#define ture 1

/**
*声明入栈函数
*其参数是一抽象类型。这里定义为int
*/
void push( STACK_TYPE  value );


/**
*声明出栈函数
*只出栈并不得到栈顶元素，所以其返回值是void
*/
void pop();

/**
*声明得到栈顶元素的函数
*/
int top();

/**
*声明判断堆栈是否满了的函数
*/
int isFull();

/**
*声明判断堆栈是否为空的函数
*/
int isEmpty();

/*
**用来创建堆栈，只适用于用动态数组、链表形式实现堆栈的方法。若用静态数组实现堆栈，则该函数无意义
*/
void createStack(unsigned size);

/*
**用来释放用动态数组、链表形式创建的堆栈的内存
**对于用静态数组创建的堆栈该函数没有意义。在静态数组的具体实现代码中也不会有该函数
*/
void destoryStack(void);

//~

